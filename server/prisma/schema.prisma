// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  tasks     Task[]
  setting   Setting?
  logs      PomodoroLog[]
  projects  Project[]
}


model Task {
  id          Int       @id @default(autoincrement())
  title              String
  estimatedPomodoros Int       @default(0)
  completed          Boolean   @default(false)
  used               Int       @default(0)
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   Int?
}


model Setting {
  id          Int     @id @default(autoincrement())
  work        Int     @default(25)
  break       Int     @default(5)
  longBreak   Int     @default(15)
  user        User    @relation(fields: [userId], references: [id])
  userId      Int     @unique
}

model PomodoroLog {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  date      DateTime
  count     Int      @default(1)

  @@unique([userId, date])
}

model Project {
  id        Int     @id @default(autoincrement())
  name      String
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  tasks     Task[]

  @@unique([userId, name])
}
